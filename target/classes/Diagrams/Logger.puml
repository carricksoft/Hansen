@startuml


package factories {
interface SingleObjectFactory {
}

}

package logger {

interface ApplicationLogger {
info(String message)
error(String error)
functionCall (Object classCalled, String routine, String Parameter)
}

class ApplicationLoggerImpl {
+info(String message)
+error(String message)
+functionCall (Object classCalled, String routine, String Parameter)
}

interface ApplicationLoggerFactory {
ApplicationLogger getApplicationLogger();
}

class ApplicationLoggerFactoryImpl {
+ApplicationLogger getApplicationLogger();
}

SingleObjectFactory  <|... ApplicationLoggerFactory: extends
ApplicationLogger <|-- ApplicationLoggerImpl
ApplicationLoggerFactory <|-- ApplicationLoggerFactoryImpl

ApplicationLoggerFactory --+ ApplicationLogger

}

@enduml